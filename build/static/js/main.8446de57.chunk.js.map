{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","target","type","components_Footer","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.8446de57.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from \"react\"\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from \"react\"\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2022</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\n\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)\n"],"sourceRoot":""}